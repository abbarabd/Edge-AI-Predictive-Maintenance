#!/bin/bash

# Script d'installation pour le backend Node.js
echo "üöÄ Installation du backend Node.js pour le monitoring des moteurs..."

# V√©rifier si Node.js est install√©
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n'est pas install√©. Veuillez installer Node.js (version 16 ou sup√©rieure)"
    exit 1
fi

# V√©rifier la version de Node.js
NODE_VERSION=$(node -v | cut -d'.' -f1 | sed 's/v//')
if [ "$NODE_VERSION" -lt 16 ]; then
    echo "‚ùå Node.js version 16 ou sup√©rieure requise. Version actuelle: $(node -v)"
    exit 1
fi

echo "‚úÖ Node.js version: $(node -v)"

# Installer les d√©pendances
echo "üì¶ Installation des d√©pendances..."
npm install

# Cr√©er le fichier .env s'il n'existe pas
if [ ! -f .env ]; then
    echo "üìù Cr√©ation du fichier .env..."
    cp .env.example .env
    echo "‚ö†Ô∏è  IMPORTANT: Configurez le fichier .env avec vos param√®tres:"
    echo "   - URL et cl√©s Supabase"
    echo "   - Configuration MQTT si n√©cessaire"
    echo "   - URL du frontend"
fi

# Installation optionnelle de PM2 pour la production
read -p "ü§ñ Voulez-vous installer PM2 pour la gestion des processus en production? (y/N): " install_pm2
if [[ $install_pm2 =~ ^[Yy]$ ]]; then
    npm install -g pm2
    echo "‚úÖ PM2 install√©"
    
    # Cr√©er le fichier de configuration PM2
    cat > ecosystem.config.js << EOF
module.exports = {
  apps: [{
    name: 'motor-monitoring-backend',
    script: 'server.js',
    instances: 1,
    autorestart: true,
    watch: false,
    max_memory_restart: '1G',
    env: {
      NODE_ENV: 'production',
      PORT: 3001
    }
  }]
};
EOF
    echo "‚úÖ Configuration PM2 cr√©√©e (ecosystem.config.js)"
fi

# Installation optionnelle de Mosquitto MQTT Broker
read -p "ü¶ü Voulez-vous installer Mosquitto MQTT Broker localement? (y/N): " install_mosquitto
if [[ $install_mosquitto =~ ^[Yy]$ ]]; then
    if command -v apt-get &> /dev/null; then
        # Ubuntu/Debian
        sudo apt-get update
        sudo apt-get install -y mosquitto mosquitto-clients
        sudo systemctl enable mosquitto
        sudo systemctl start mosquitto
        echo "‚úÖ Mosquitto install√© et d√©marr√©"
    elif command -v yum &> /dev/null; then
        # CentOS/RHEL
        sudo yum install -y epel-release
        sudo yum install -y mosquitto mosquitto-clients
        sudo systemctl enable mosquitto
        sudo systemctl start mosquitto
        echo "‚úÖ Mosquitto install√© et d√©marr√©"
    elif command -v brew &> /dev/null; then
        # macOS
        brew install mosquitto
        brew services start mosquitto
        echo "‚úÖ Mosquitto install√© et d√©marr√©"
    else
        echo "‚ö†Ô∏è  Installation manuelle requise pour Mosquitto MQTT Broker"
        echo "   Visitez: https://mosquitto.org/download/"
    fi
fi

echo ""
echo "üéâ Installation termin√©e!"
echo ""
echo "üìã Prochaines √©tapes:"
echo "1. Configurez le fichier .env avec vos param√®tres"
echo "2. Assurez-vous que votre base de donn√©es Supabase est configur√©e"
echo "3. D√©marrez le serveur:"
echo "   - D√©veloppement: npm run dev"
echo "   - Production: npm start"
if [[ $install_pm2 =~ ^[Yy]$ ]]; then
echo "   - Production avec PM2: pm2 start ecosystem.config.js"
fi
echo ""
echo "üîó URLs importantes:"
echo "   - API Backend: http://localhost:3001"
echo "   - Health Check: http://localhost:3001/health"
echo "   - Documentation API: Voir README.md"
echo ""
echo "üì° Configuration MQTT:"
echo "   - Topics d'√©coute: machine/+/data, machine/+/alerts"
echo "   - Broker par d√©faut: 127.0.0.1:1883"
echo ""